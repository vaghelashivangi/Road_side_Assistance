// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConnectionCheckerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button dialogCancel;

  @NonNull
  public final Button dialogOk;

  @NonNull
  public final TextView message;

  @NonNull
  public final RelativeLayout relativeLayout1;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final RelativeLayout relativeLayout3;

  @NonNull
  public final RelativeLayout rlmain;

  @NonNull
  public final TextView title;

  private ConnectionCheckerBinding(@NonNull RelativeLayout rootView, @NonNull Button dialogCancel,
      @NonNull Button dialogOk, @NonNull TextView message, @NonNull RelativeLayout relativeLayout1,
      @NonNull RelativeLayout relativeLayout2, @NonNull RelativeLayout relativeLayout3,
      @NonNull RelativeLayout rlmain, @NonNull TextView title) {
    this.rootView = rootView;
    this.dialogCancel = dialogCancel;
    this.dialogOk = dialogOk;
    this.message = message;
    this.relativeLayout1 = relativeLayout1;
    this.relativeLayout2 = relativeLayout2;
    this.relativeLayout3 = relativeLayout3;
    this.rlmain = rlmain;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConnectionCheckerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConnectionCheckerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.connection_checker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConnectionCheckerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_cancel;
      Button dialogCancel = ViewBindings.findChildViewById(rootView, id);
      if (dialogCancel == null) {
        break missingId;
      }

      id = R.id.dialog_ok;
      Button dialogOk = ViewBindings.findChildViewById(rootView, id);
      if (dialogOk == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.relativeLayout1;
      RelativeLayout relativeLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout1 == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.relativeLayout3;
      RelativeLayout relativeLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout3 == null) {
        break missingId;
      }

      id = R.id.rlmain;
      RelativeLayout rlmain = ViewBindings.findChildViewById(rootView, id);
      if (rlmain == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ConnectionCheckerBinding((RelativeLayout) rootView, dialogCancel, dialogOk,
          message, relativeLayout1, relativeLayout2, relativeLayout3, rlmain, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
