// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomVehicleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView customVehicleColor;

  @NonNull
  public final ImageView customVehicleEdit;

  @NonNull
  public final ImageView customVehicleImage;

  @NonNull
  public final TextView customVehicleModel;

  @NonNull
  public final TextView customVehicleName;

  @NonNull
  public final TextView customVehicleYear;

  private CustomVehicleBinding(@NonNull LinearLayout rootView, @NonNull TextView customVehicleColor,
      @NonNull ImageView customVehicleEdit, @NonNull ImageView customVehicleImage,
      @NonNull TextView customVehicleModel, @NonNull TextView customVehicleName,
      @NonNull TextView customVehicleYear) {
    this.rootView = rootView;
    this.customVehicleColor = customVehicleColor;
    this.customVehicleEdit = customVehicleEdit;
    this.customVehicleImage = customVehicleImage;
    this.customVehicleModel = customVehicleModel;
    this.customVehicleName = customVehicleName;
    this.customVehicleYear = customVehicleYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomVehicleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomVehicleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_vehicle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomVehicleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.custom_vehicle_color;
      TextView customVehicleColor = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleColor == null) {
        break missingId;
      }

      id = R.id.custom_vehicle_edit;
      ImageView customVehicleEdit = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleEdit == null) {
        break missingId;
      }

      id = R.id.custom_vehicle_image;
      ImageView customVehicleImage = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleImage == null) {
        break missingId;
      }

      id = R.id.custom_vehicle_model;
      TextView customVehicleModel = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleModel == null) {
        break missingId;
      }

      id = R.id.custom_vehicle_name;
      TextView customVehicleName = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleName == null) {
        break missingId;
      }

      id = R.id.custom_vehicle_year;
      TextView customVehicleYear = ViewBindings.findChildViewById(rootView, id);
      if (customVehicleYear == null) {
        break missingId;
      }

      return new CustomVehicleBinding((LinearLayout) rootView, customVehicleColor,
          customVehicleEdit, customVehicleImage, customVehicleModel, customVehicleName,
          customVehicleYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
