// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView customHistoryAddress;

  @NonNull
  public final TextView customHistoryCharge;

  @NonNull
  public final TextView customHistoryDate;

  @NonNull
  public final TextView customHistoryId;

  @NonNull
  public final ImageView customHistoryMap;

  @NonNull
  public final TextView customHistoryName;

  @NonNull
  public final TextView customHistoryRegistration;

  @NonNull
  public final TextView customHistoryService;

  @NonNull
  public final TextView customHistoryStatus;

  private CustomHistoryBinding(@NonNull LinearLayout rootView,
      @NonNull TextView customHistoryAddress, @NonNull TextView customHistoryCharge,
      @NonNull TextView customHistoryDate, @NonNull TextView customHistoryId,
      @NonNull ImageView customHistoryMap, @NonNull TextView customHistoryName,
      @NonNull TextView customHistoryRegistration, @NonNull TextView customHistoryService,
      @NonNull TextView customHistoryStatus) {
    this.rootView = rootView;
    this.customHistoryAddress = customHistoryAddress;
    this.customHistoryCharge = customHistoryCharge;
    this.customHistoryDate = customHistoryDate;
    this.customHistoryId = customHistoryId;
    this.customHistoryMap = customHistoryMap;
    this.customHistoryName = customHistoryName;
    this.customHistoryRegistration = customHistoryRegistration;
    this.customHistoryService = customHistoryService;
    this.customHistoryStatus = customHistoryStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.custom_history_address;
      TextView customHistoryAddress = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryAddress == null) {
        break missingId;
      }

      id = R.id.custom_history_charge;
      TextView customHistoryCharge = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryCharge == null) {
        break missingId;
      }

      id = R.id.custom_history_date;
      TextView customHistoryDate = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryDate == null) {
        break missingId;
      }

      id = R.id.custom_history_id;
      TextView customHistoryId = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryId == null) {
        break missingId;
      }

      id = R.id.custom_history_map;
      ImageView customHistoryMap = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryMap == null) {
        break missingId;
      }

      id = R.id.custom_history_name;
      TextView customHistoryName = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryName == null) {
        break missingId;
      }

      id = R.id.custom_history_registration;
      TextView customHistoryRegistration = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryRegistration == null) {
        break missingId;
      }

      id = R.id.custom_history_service;
      TextView customHistoryService = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryService == null) {
        break missingId;
      }

      id = R.id.custom_history_status;
      TextView customHistoryStatus = ViewBindings.findChildViewById(rootView, id);
      if (customHistoryStatus == null) {
        break missingId;
      }

      return new CustomHistoryBinding((LinearLayout) rootView, customHistoryAddress,
          customHistoryCharge, customHistoryDate, customHistoryId, customHistoryMap,
          customHistoryName, customHistoryRegistration, customHistoryService, customHistoryStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
