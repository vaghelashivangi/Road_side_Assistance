// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityForgotPasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText forgotConfirmPassword;

  @NonNull
  public final EditText forgotMobile;

  @NonNull
  public final EditText forgotNewPassword;

  @NonNull
  public final TextView forgotSubmit;

  private ActivityForgotPasswordBinding(@NonNull LinearLayout rootView,
      @NonNull EditText forgotConfirmPassword, @NonNull EditText forgotMobile,
      @NonNull EditText forgotNewPassword, @NonNull TextView forgotSubmit) {
    this.rootView = rootView;
    this.forgotConfirmPassword = forgotConfirmPassword;
    this.forgotMobile = forgotMobile;
    this.forgotNewPassword = forgotNewPassword;
    this.forgotSubmit = forgotSubmit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_forgot_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityForgotPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forgot_confirm_password;
      EditText forgotConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotConfirmPassword == null) {
        break missingId;
      }

      id = R.id.forgot_mobile;
      EditText forgotMobile = ViewBindings.findChildViewById(rootView, id);
      if (forgotMobile == null) {
        break missingId;
      }

      id = R.id.forgot_new_password;
      EditText forgotNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotNewPassword == null) {
        break missingId;
      }

      id = R.id.forgot_submit;
      TextView forgotSubmit = ViewBindings.findChildViewById(rootView, id);
      if (forgotSubmit == null) {
        break missingId;
      }

      return new ActivityForgotPasswordBinding((LinearLayout) rootView, forgotConfirmPassword,
          forgotMobile, forgotNewPassword, forgotSubmit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
