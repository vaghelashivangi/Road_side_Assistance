// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddVehicleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addVehicleAdd;

  @NonNull
  public final ImageView addVehicleBack;

  @NonNull
  public final LinearLayout addVehicleBottomLayout;

  @NonNull
  public final TextView addVehicleCancel;

  @NonNull
  public final EditText addVehicleColour;

  @NonNull
  public final AutoCompleteTextView addVehicleMakeModel;

  @NonNull
  public final Spinner addVehicleModelSpinner;

  @NonNull
  public final EditText addVehicleRegistrationNo;

  @NonNull
  public final RadioButton addVehicleType2w;

  @NonNull
  public final RadioButton addVehicleType4w;

  @NonNull
  public final RadioButton addVehicleTypeCv;

  @NonNull
  public final RadioGroup addVehicleTypeRg;

  @NonNull
  public final EditText addVehicleVin;

  @NonNull
  public final Spinner addVehicleYear;

  private ActivityAddVehicleBinding(@NonNull LinearLayout rootView, @NonNull TextView addVehicleAdd,
      @NonNull ImageView addVehicleBack, @NonNull LinearLayout addVehicleBottomLayout,
      @NonNull TextView addVehicleCancel, @NonNull EditText addVehicleColour,
      @NonNull AutoCompleteTextView addVehicleMakeModel, @NonNull Spinner addVehicleModelSpinner,
      @NonNull EditText addVehicleRegistrationNo, @NonNull RadioButton addVehicleType2w,
      @NonNull RadioButton addVehicleType4w, @NonNull RadioButton addVehicleTypeCv,
      @NonNull RadioGroup addVehicleTypeRg, @NonNull EditText addVehicleVin,
      @NonNull Spinner addVehicleYear) {
    this.rootView = rootView;
    this.addVehicleAdd = addVehicleAdd;
    this.addVehicleBack = addVehicleBack;
    this.addVehicleBottomLayout = addVehicleBottomLayout;
    this.addVehicleCancel = addVehicleCancel;
    this.addVehicleColour = addVehicleColour;
    this.addVehicleMakeModel = addVehicleMakeModel;
    this.addVehicleModelSpinner = addVehicleModelSpinner;
    this.addVehicleRegistrationNo = addVehicleRegistrationNo;
    this.addVehicleType2w = addVehicleType2w;
    this.addVehicleType4w = addVehicleType4w;
    this.addVehicleTypeCv = addVehicleTypeCv;
    this.addVehicleTypeRg = addVehicleTypeRg;
    this.addVehicleVin = addVehicleVin;
    this.addVehicleYear = addVehicleYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddVehicleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddVehicleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_vehicle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddVehicleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_vehicle_add;
      TextView addVehicleAdd = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleAdd == null) {
        break missingId;
      }

      id = R.id.add_vehicle_back;
      ImageView addVehicleBack = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleBack == null) {
        break missingId;
      }

      id = R.id.add_vehicle_bottom_layout;
      LinearLayout addVehicleBottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleBottomLayout == null) {
        break missingId;
      }

      id = R.id.add_vehicle_cancel;
      TextView addVehicleCancel = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleCancel == null) {
        break missingId;
      }

      id = R.id.add_vehicle_colour;
      EditText addVehicleColour = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleColour == null) {
        break missingId;
      }

      id = R.id.add_vehicle_make_model;
      AutoCompleteTextView addVehicleMakeModel = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleMakeModel == null) {
        break missingId;
      }

      id = R.id.add_vehicle_model_spinner;
      Spinner addVehicleModelSpinner = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleModelSpinner == null) {
        break missingId;
      }

      id = R.id.add_vehicle_registration_no;
      EditText addVehicleRegistrationNo = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleRegistrationNo == null) {
        break missingId;
      }

      id = R.id.add_vehicle_type_2w;
      RadioButton addVehicleType2w = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleType2w == null) {
        break missingId;
      }

      id = R.id.add_vehicle_type_4w;
      RadioButton addVehicleType4w = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleType4w == null) {
        break missingId;
      }

      id = R.id.add_vehicle_type_cv;
      RadioButton addVehicleTypeCv = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleTypeCv == null) {
        break missingId;
      }

      id = R.id.add_vehicle_type_rg;
      RadioGroup addVehicleTypeRg = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleTypeRg == null) {
        break missingId;
      }

      id = R.id.add_vehicle_vin;
      EditText addVehicleVin = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleVin == null) {
        break missingId;
      }

      id = R.id.add_vehicle_year;
      Spinner addVehicleYear = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleYear == null) {
        break missingId;
      }

      return new ActivityAddVehicleBinding((LinearLayout) rootView, addVehicleAdd, addVehicleBack,
          addVehicleBottomLayout, addVehicleCancel, addVehicleColour, addVehicleMakeModel,
          addVehicleModelSpinner, addVehicleRegistrationNo, addVehicleType2w, addVehicleType4w,
          addVehicleTypeCv, addVehicleTypeRg, addVehicleVin, addVehicleYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
