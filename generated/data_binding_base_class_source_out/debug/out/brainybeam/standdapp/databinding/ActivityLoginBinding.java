// Generated by view binder compiler. Do not edit!
package brainybeam.standdapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import brainybeam.standdapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView loginForgot;

  @NonNull
  public final EditText loginMobile;

  @NonNull
  public final EditText loginPassword;

  @NonNull
  public final TextView loginSignup;

  @NonNull
  public final TextView loginSubmit;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextView loginForgot,
      @NonNull EditText loginMobile, @NonNull EditText loginPassword, @NonNull TextView loginSignup,
      @NonNull TextView loginSubmit) {
    this.rootView = rootView;
    this.loginForgot = loginForgot;
    this.loginMobile = loginMobile;
    this.loginPassword = loginPassword;
    this.loginSignup = loginSignup;
    this.loginSubmit = loginSubmit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_forgot;
      TextView loginForgot = ViewBindings.findChildViewById(rootView, id);
      if (loginForgot == null) {
        break missingId;
      }

      id = R.id.login_mobile;
      EditText loginMobile = ViewBindings.findChildViewById(rootView, id);
      if (loginMobile == null) {
        break missingId;
      }

      id = R.id.login_password;
      EditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.login_signup;
      TextView loginSignup = ViewBindings.findChildViewById(rootView, id);
      if (loginSignup == null) {
        break missingId;
      }

      id = R.id.login_submit;
      TextView loginSubmit = ViewBindings.findChildViewById(rootView, id);
      if (loginSubmit == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, loginForgot, loginMobile,
          loginPassword, loginSignup, loginSubmit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
